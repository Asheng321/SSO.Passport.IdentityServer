@model Models.Entity.UserGroup

@{
    ViewBag.Title = $" 用户组角色管理【{Model.GroupName}】";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    <h2>管理用户组【@Model.GroupName】所属角色</h2>
</div>
<div>
    <div class="box">
        <div class="box-body">
            <div class="row">
                <div class="col-sm-6 col-lg-5 col-md-5">
                    <div class="form-group">
                        <label>无权限角色</label>
                        <select multiple class="form-control" id="noItem" style="height: 410px"></select>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-7 col-md-7">
                    <div class="form-group">
                        <label>已存在的角色</label>
                        <select multiple class="form-control" id="hasItem" style="height: 410px"></select>
                    </div>
                </div>
            </div>
            <div class="row container">
                <button class="btn btn-default" id="addBtn">修改</button>
            </div>
        </div>
    </div>
    <div class="box">
        <div class="box-body">
            <div class="row">
                @using(Html.BeginForm("", "", FormMethod.Post, new {id = "form", onsubmit = "return false", @class = "form-horizontal col-md-12"})) {
                    <div class="page-header">
                        <h4>切换用户组【@Model.GroupName】的角色权限</h4>
                    </div><text> | </text>
                    var ps = Model.UserGroupPermission;
                    foreach(var p in ps) {
                        <label>
                            @Html.CheckBox("rids", p.HasPermission, new {value = p.RoleId, data_gid = p.UserGroupId.ToString(), data_rid = p.RoleId})@p.Role.RoleName
                        </label>
                        <text> | </text>
                    }
                }
            </div>
            <div class="row container">
                <button class="btn btn-default" id="toggle">保存</button>
            </div>
        </div>
    </div>
</div>
<script>
	$(function() {
		InitSelect("/Role/NoHasGroup", "noItem");
		InitSelect("/Role/GroupList", "hasItem");
		$("#noItem").bind("change", function() {
			MoveSelectOption("noItem", "hasItem");
		});
		$("#hasItem").bind("change", function() {
			MoveSelectOption("hasItem", "noItem");
		});

		$("#addBtn").bind("click", function() {
			InitAddBtn();
		});
		$("#toggle").click(function(e) {
			var gid = "";
			var rid = "";
			var has = "";
			$("#form :checkbox").map(function(index, item, array) {
				var data = $(item).data();
				has += $(item).is(':checked') + ",";
				gid += data.gid + ",";
				rid += data.rid + ",";
			});
			var ps = {
				gid,
				rid,
				has
			};
			swal({
				title: "确认保存?",
				text: "确认修改用户临时权限数据!",
				type: "warning",
				showCancelButton: true,
				confirmButtonColor: "#DD6B55",
				confirmButtonText: "保存",
				cancelButtonText: "取消",
				showLoaderOnConfirm: true,
				preConfirm: function() {
                    return new Promise(function (resolve) {
	                    $.post("/Role/Toggle", ps, function(data) {
		                    data = JSON.parse(data);
							resolve(data);
	                    });
					});
				},
				allowOutsideClick: false
			}).then(function(data) {
				if (data.Success) {

					swal("操作成功！", data.Message, "success");
				} else {
					swal("操作失败！", data.Message, "error");
				}
			}, function() {
				swal("操作被取消！", "数据不会被保存！", "error");
			});
		});
	});

	function MoveSelectOption(fromSelect, toSelect) {

		var selectText = $("#" + fromSelect).find("option:selected").text();
		var selectValue = $("#" + fromSelect).val();

		$("#" + fromSelect + " option[value='" + selectValue + "']").remove();
		$("#" + toSelect).prepend("<option value='" + selectValue + "'>" + selectText + "</option>");
	}

	function InitSelect(url, selectName) {
		$.ajax({
			cache: true,
			type: "POST",
			url: url,
			data: {
				id: '@Model.Id'
			},
			async: false,
			success: function(data) {
				var jsonData = JSON.parse(data);
				if (jsonData.Success) {
					$.each(jsonData.Data, function(index, item) {
						$("#" + selectName).prepend("<option value='" + item.Id + "'>" + item.RoleName + "</option>");
					});
				} else {

				}
			}
		});
	}

	function InitAddBtn() {
		var itemValues = "";
		$('#hasItem option').each(function(i, selected) {
			itemValues += $(selected).val() + ",";
		});

		$.ajax({
			cache: true,
			type: "POST",
			url: "/Role/UpdateGroup",
			data: {
				id: '@Model.Id',
				rids: itemValues
			},
			async: false,
			success: function(data) {
				data = JSON.parse(data);
				if (data.Success) {
					history.back();
				} else {
					$("#warringMsg").html("<p class='text-danger'>" + data.Message + "</p>");
				}
			}
		});
	}
</script>
