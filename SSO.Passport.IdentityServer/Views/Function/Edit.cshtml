@model Models.Entity.Function

@{
    ViewBag.Title = "编辑功能控制列表";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("","",FormMethod.Post,new{id="form",onsubmit="return false"}))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="page-header">
            <h2>编辑功能控制列表</h2>
        </div>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Controller, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Controller, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Controller, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Action, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Action, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Action, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IconUrl, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.IconUrl, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.IconUrl, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CssStyle, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CssStyle, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CssStyle, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HttpMethod, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.HttpMethod, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HttpMethod, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FunctionType, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.FunctionType, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.FunctionType, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="save" value="保存" class="btn btn-default"/>
            </div>
        </div>
    </div>
}
<script>
	$(function() {
			$("#save").click(function(e) {
				swal({
					title: "确认保存?",
					text: "确认修改!",
					type: "warning",
					showCancelButton: true,
					confirmButtonColor: "#DD6B55",
					confirmButtonText: "确认",
					cancelButtonText: "取消",
					showLoaderOnConfirm: true,
					preConfirm: function() {
						return new Promise(function(resolve) {
                            $.post("/Function/Update", $("#form").serialize(), function(data) {
								data = JSON.parse(data);
								resolve(data);
							});
						});
					},
					allowOutsideClick: false
				}).then(function(data) {
					if (data.Success) {
						swal("修改成功！", data.Message, "success").then(function() {
							history.back();
						});
					} else {
						swal("修改失败！", data.Message, "error");
					}
				}, function() {
					swal("操作被取消！", "密码不会被更改！", "error");
				});
			});
		});
</script>